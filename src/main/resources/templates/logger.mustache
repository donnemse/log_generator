<!doctype html>
<html lang="ko">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="A layout example that shows off a responsive logger layout.">
    <title>ILogger</title>
    {{>import}}
    <script type="text/javascript">
        
        $(function() {
            var editor = ace.edit("editor");
            editor.session.setMode("ace/mode/yaml");
            editor.setTheme("ace/theme/tomorrow");
            editor.setOption("showInvisibles", true)
            editor.session.setOptions({ tabSize: 4, useSoftTabs: true });
            
            axios.get('/api/logger/list')
                .then(function (response) {
                	console.log(response);
                    let i = 0;
                    $.each(response.data.data, function(k, v) {
                        let $div = $(
                            "<div class=\"logger-item pure-g " + (i++ == 0? "logger-item-selected logger-item-unread": "") + "\">" +
                            "   <div class=\"pure-u-1\">" +
                            "       <h5 class=\"logger-name\">" + v.name + "</h5>" + 
                            "       <h4 class=\"logger-subject\">" + v.logger.log + "</h4>" +
                            "       <h6 class=\"logger-subject\">" +
                            "           EPS: " + v.logger.eps + "\nlogtype: " + v.logger.logtype +
                            "       </h6>" +
                            "       <p class=\"logger-desc\">" + v.logger.raw + "</p>" +
                            "   </div>" +
                            "   <div class=\"pure-u-1-8 change-state\">" +
                            "       <div class=\"form-check form-switch\">" +
                            "           <input class=\"form-check-input checkbox-change-state\" type=\"checkbox\" role=\"switch\" " + (v.status == 1? "checked": "") + ">" +
                            "       </div>" +
                            "   </div>" +
                            "</div>")
                       $div.data("logger_id", v.id)
                        $(".list").append($div);
                    });
                })
                .catch(function (error) {
                    console.log(error);
                })
                .then(function () {
                    $(".logger-item").eq(0).trigger("click");
                });
            
            $(document).on("click", ".logger-item", function (e) {
                if ($(e.target).hasClass("button-change-state")) {
                	return;
                }
                $(".logger-item").removeClass("logger-item-selected logger-item-unread");
                $(e.currentTarget).addClass("logger-item-selected logger-item-unread");
                
                axios.get('/api/logger/get/' + $(e.currentTarget).data("logger_id"))
                .then(function (response) {
                	console.log(response.data);
                    let data = response.data.data;
                    editor.setValue(data.yaml_str, -1)
                    
                    let $div = $(
                        "<h2 class=\"logger-content-title\">" +
                        "   <input type=\"text\" id=\"selected_name\" value=\"" + data.name + "\">" +
                        "</h2>" +
                        "<p class=\"logger-content-subtitle\">" +
                            "From <a>" + data.ip + "</a> at <span>" + moment(data.last_modified).format("YYYY/MM/DD HH:mm:ss") + "</span>" +
                        "</p>" +
                        "<input type=\"hidden\" id=\"selected_id\" value=\"" + data.id + "\" />" +
                        "<input type=\"hidden\" id=\"selected_status\" value=\"" + data.status + "\" />"
                    );
                    $(".logger-info").html($div);
                    
                })
                .catch(function (error) {
                    // handle error
                    console.log(error);
                })
                .then(function () {
                    // always executed
                });
            });
            
            $(document).on("click", ".save-button", function (e) {
                let name = $("#selected_name").val();
                let id = $("#selected_id").val();
                let yaml = editor.getValue();
                
                axios({
                    url: "/api/logger/modify",
                    method: "patch",
                    data: {
                        name: name,
                        id: id,
                        yaml: yaml
                    }
                }).then(function (response) {
                    console.log(response.data);
                }).catch(function (error) {
                    console.log(error);
                }).then(function () {
                    // always executed
                });
            });
            
            $(document).on("click", ".sample-button", function (e) {
                $tbody = $(".modal .modal-body .pure-table tbody")
                $tbody.empty();
                let re = /(\{|,\s)(?<key>[a-zA-Z0-9\-\_]{1,})(=)(?<val>.+?)(\,\s|\})/gm
                axios({
                    url: "/api/logger/sample",
                    method: "post",
                    data: {
                        yaml: editor.getValue()
                    }
                }).then(function (response) {
                    $.each(response.data.data, function(idx, val) {
                        let list = [];
                        $.each(val, function(k, v) {
                            list.push("<span class=\"field-key\" name=\"" + k + "\">" + k + "</span>=" +
                            "<span class=\"field-val\" name=\"" + v + "\">" + v + "</span>");
                        });
                        
                        $tbody.append(
                            "<tr class=\"" + (idx % 2 == 0? "": "pure-table-odd") + "\">" +
                            "    <td>" + (idx + 1) + "</td>" +
                            "    <td>" + list.join(", ") + "</td>" +
                            "</tr>");
                    });
                    console.log(response.data);
                }).catch(function (error) {
                    console.log(error);
                }).then(function () {
                    // always executed
                });
            });
            
            $(document).on('mouseenter',".field-key",function (e) {
            	let name = $(e.currentTarget).attr("name");
                $(".field-key[name=\"" + name + "\"]").addClass("field-key-hover");
            });

            $(document).on('mouseleave',".field-key",function (e) {
            	let name = $(e.currentTarget).attr("name");
                $(".field-key[name=\"" + name + "\"]").removeClass("field-key-hover");
            });
            
            $(document).on('click',".change-state .checkbox-change-state",function (e) {
            	$checkbox = $(this);
            	let id = $(e.target).parents(".logger-item").data("logger_id");
            	let flag = $checkbox.is(":checked");
            	console.log(flag)
            	axios({
                    url: "/api/logger/" + (flag? "start": "stop") + "/" + id,
                    method: "get"
                }).then(function (response) {
                	console.log(response)
                    if (response.data.data) {
                    	$.notify({message: response.data.msg},{type: 'success'});
                    } else {
                    	$.notify({message: response.data.msg},{type: 'danger'});
                    }
                }).catch(function (error) {
                    console.log(error);
                }).then(function () {
                    // always executed
                });
            });
        });
    </script>
</head>
<body>


<!-- History -->
<div id="layout" class="content pure-g">
    {{>nav}}
    <div class="pure-u-1">
        <div class="pure-u-1 list"></div>
        <div class="pure-u-1 main">
            <div class="logger-content">
                <div class="logger-content-header pure-g">
                    <div class="logger-info pure-u-1-2"></div>
                    <div class="logger-content-controls pure-u-1-2">
                        <button type="button" class="secondary-button pure-button sample-button" data-bs-toggle="modal" data-bs-target="#exampleModal">
                            Sample
                        </button>
                        <button class="secondary-button pure-button save-button">Save</button>
                        <button class="secondary-button pure-button remove-button">Remove</button>
                    </div>
                </div>
    
                <div class="logger-content-body">
                    <div id="editor"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="pure-table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Genrated Log</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="pure-button" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Script to make the Menu link work -->
<!-- Just stripped down version of the js/ui.js script for the side-menu layout -->

</body>
</html>