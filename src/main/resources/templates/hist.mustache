<!doctype html>
<html lang="ko">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="A layout example that shows off a responsive logger layout.">
    <title>ILogger</title>
    {{>import}}
    <style type="text/css">
        @media (min-width: 60em) {
            .list {
                width:200px;
                margin-left: -200px;
            }
        }
        
        @media (min-width: 40em) {

            #layout {
                padding-left: 150px;
            }
            #nav {
                margin-left: -150px;
            }
        }
        .acediff {
          height: 70vh
        }
    </style>
    <script type="text/javascript">
    let differ = undefined;
    $(function() {
           let columns = [
               'id',{
                   name: "fid",
                   hidden: true
               }, {
                   name: 'name',
                   formatter: (cell, row) => {
                       return row.cells[2].data != null? row.cells[2].data: row.cells[1].data;
                   },
               },
               'ip','time', 'message',
               {
                   name: 'detail',
                   formatter: (cell, row) => {
                       if (row.cells[6].data == null) {
                        return "";
                    }
                       but = [
                           gridjs.h('button', {
                            className: 'btn btn-outline-success diff-button',
                            onClick: () => diffInit(`${row.cells[1].data}`, `${row.cells[6].data}`)
                          }, 'Diff(now)'),
                       ];
                       if (row.cells[8].data != null) {
                           but.push(
                          gridjs.h('button', {
                              className: 'btn btn-outline-success diff-button',
                              onClick: () => diffInit(`${row.cells[8].data}`, `${row.cells[6].data}`)
                            }, 'Diff(last)')
                       );
                       }
                       return but;
                }
               },
               {
                   name: 'error',
                   formatter: (cell, row) => {
                       if (row.cells[7].data == null) {
                           return "";
                       }
                       return gridjs.h('button', {
                        className: 'btn btn-outline-danger diff-button',
                        onClick: () => errorModal(`${row.cells[7].data}`)
                    }, 'Error');
                   }
               },
               {
                name: "last",
                hidden: true
            }
           ];
           new gridjs.Grid({
            columns: columns,
            height: "calc(100vh - 200px)",
            pagination: {
                enabled: true,
                limit: 10,
                server: {
                    url: (prev, page, limit) => `${prev}/${page+1}`
                }
            },
            server: {
                url: '/api/history/list',
                then: data => data.data.list.map(hist => [
                    hist.id,
                    hist.fid,
                    hist.name,
                    hist.ip,
                    moment(hist.last_modified).format("YYYY/MM/DD HH:mm:ss"),
                    hist.msg,
                    hist.detail,
                    hist.error,
                    hist.last,
                ]),
                total: data => data.data.total_cnt
                } 
            }).render(document.getElementById('table'));
    });
    
    function initModal(){
        if (differ != undefined) {
            differ.destroy();
            differ = undefined;
        }
        $(".acediff").empty();
    }
    
    function errorModal(error) {
        initModal();
        $(".modal-title").text("Error history")
        $(".acediff").html(error);
        $(".modal").modal("show");
    }
    
    function diffInit(origin, yaml) {
        
        if(!isNaN(parseInt(origin))){
            axios.get('/api/logger/get/' + origin)
            .then(function (response) {
                let data = response.data.data;
                origin = data.yaml_str;
            })
            .catch(function (error) {
                console.log(error);
            })
            .then(function () {
                diffModal(origin, yaml);
            });
        }
        diffModal(origin, yaml);
    }
    
    function diffModal(origin, yaml){
        initModal();
        $(".modal-title").text("Diff")
        differ = new AceDiff({
            ace: window.ace, // You Ace Editor instance
            theme: "ace/theme/tomorrow",
            mode: "ace/mode/yaml",
            diffGranularity: "specific",
            element: '.acediff',
            lockScrolling: true,
            showInvisibles: true,
            left: {
                content: origin,
                editable: false,
                copyLinkEnabled: true
            },
            right: {
                content: yaml,
                editable: false,
                copyLinkEnabled: true
            },
       });
        differ.editors.left.ace.setOption("showInvisibles", true)
        differ.editors.right.ace.setOption("showInvisibles", true)
        //differ.setOptions({"showInvisibles": true})
        
        $(".modal").modal("show");
    }
    </script>
</head>
<body>


<!-- History -->
<div id="layout" class="content pure-g">
    {{>nav}}
    <div class="pure-u-1">
        <div id="main" class="pure-u-1 main">
            <div class="logger-content">
                <div class="logger-content-header pure-g">
                    <div class="logger-info pure-u-1-2"></div>
                    <div class="logger-content-controls pure-u-1-2">
                        <button class="secondary-button pure-button save-button">Logger</button>
                        <button class="secondary-button pure-button remove-button">Output</button>
                    </div>
                </div>
    
                <div class="logger-content-body">
                    <div id="table"></div>
                </div>
            </div>
       </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="acediff"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="pure-button close-modal-button" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Script to make the Menu link work -->
<!-- Just stripped down version of the js/ui.js script for the side-menu layout -->

</body>
</html>